!function(t){var e={};function i(n){if(e[n])return e[n].exports;var a=e[n]={i:n,l:!1,exports:{}};return t[n].call(a.exports,a,a.exports,i),a.l=!0,a.exports}i.m=t,i.c=e,i.d=function(t,e,n){i.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:n})},i.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},i.t=function(t,e){if(1&e&&(t=i(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var n=Object.create(null);if(i.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var a in t)i.d(n,a,function(e){return t[e]}.bind(null,a));return n},i.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return i.d(e,"a",e),e},i.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},i.p="",i(i.s=5)}([function(t,e){t.exports={Lista:class{constructor(){this.lista=[]}adicionarCliente(t){this.lista.push(t)}buscarCliente(t){return this.lista[t]}editarCliente(t,e){this.lista[e]=t}}}},function(t,e,i){const{Cliente:n}=i(4);t.exports={ClientesController:class{constructor(t,e){this.model=t,this.view=e}clicks(t){const e=t.getAttribute("id");switch(e){case"novo-cliente":this.view.carregaViewForm();break;case"criar":this.adicionarEditarCliente();break;case"voltar":console.log(e),this.view.atualizaViewLista(this.model);break;case"editar-cliente":const i=t.parentNode.parentNode.getAttribute("id");this.buscarCliente(i);break;case"editar":const n=t.getAttribute("cliente-id");this.adicionarEditarCliente(n)}}buscarCliente(t){const e=this.model.buscarCliente(t);this.view.carregaViewForm(e)}adicionarEditarCliente(t){const e=document.querySelector("#nome").value,i=document.querySelector("#e-mail").value,a=document.querySelector("#cpf").value,o=document.querySelector("#tel").value,l=document.querySelector("#status").value;if(t){const s=new n(t,e,i,a,o,l);this.model.editarCliente(s,t),localStorage.setItem(`Cliente: ${t}`,JSON.stringify(s))}else{let t=ClienteIdController++;const s=new n(t,e,i,a,o,l);localStorage.setItem(`Cliente: ${t}`,JSON.stringify(s)),this.model.adicionarCliente(s)}this.view.atualizaViewLista(this.model)}iniciaPagina(){this.carregaClientes(),this.view.atualizaViewLista(this.model)}carregaClientes(){for(;JSON.parse(localStorage.getItem(`Cliente: ${ClienteIdController}`));){console.log(JSON.parse(localStorage.getItem(`Cliente: ${ClienteIdController}`)));let t=JSON.parse(localStorage.getItem(`Cliente: ${ClienteIdController}`));this.model.adicionarCliente(new n(t.id,t.nome,t.email,t.cpf,t.tel,t.status)),ClienteIdController++}}}},ClienteIdController=0},function(t,e){t.exports={ListaView:class{constructor(t){this.seletor=t}getTemplateLista(t){return t.lista.map((function(t){return` \n        <li id="${t.id}" class="lista-container">\n        <div class="container-item item-1"><h3>${t.nome}</h3><p>${t.email}</p></div>\n        <div class="container-item item-2"><h3>${t.cpf}</h3><p>${t.tel}</p></div>\n        <div class="container-item item-3">\n        <div class="status"><div class="${t.status} status-icon"></div>\n        <div class="status-msg">${t.status}</div></div></div>\n        <div class="container-item item-4"><button id="editar-cliente">Editar</button></div>\n        </li>`})).join("")}atualizaViewLista(t){this.seletor.innerHTML=`\n    <div class="cabecalho">\n      <div class="titulos-cabecalho">\n        <h2>Listagem de usuários</h2><p>Escolha um cliente para visualizar os detalhes</p>\n      </div>\n      <button id='novo-cliente' class="btn-novo-cliente">Novo cliente</button>\n    </div>\n    <ul id="lista-de-usuarios">  ${this.getTemplateLista(t)}  </ul>`}carregaViewForm(t){let e=t?`value=${t.nome}`:'placeholder="Nome"',i=t?`value=${t.email}`:'placeholder="E-mail"',n=t?`value=${t.cpf}`:'placeholder="CPF"',a=t?`value=${t.tel}`:'placeholder="Telefone"',o=t?`id="editar" cliente-id="${t.id}"`:'id="criar"',l=t?"Editar":"Criar",s=t?this.editaOptions(t.status):this.criaOptions();this.seletor.innerHTML=`\n      <div class="cabecalho">\n        <div class="titulos-cabecalho">\n        <h2>Novo usuário</h2><p>Informe os campos a seguir para criar novo usuário:</p>\n        </div>\n      </div>\n      <form id="form-cliente" action="">\n        <input id='nome' ${e} type="text" value="">\n        <input id='e-mail' ${i} type="email">\n        <input id='cpf' ${n} type="number">\n        <input id='tel' ${a} type="tel">\n        <select id='status'>${s}\n        </select>\n        <div class="form-buttons">\n          <button ${o} class="btn btn-laranja">${l}</button>\n          <button id="voltar" class="btn btn-branco">Voltar</button>\n        </div>\n      </form>`}editaOptions(t){let e;return["status","ativo","inativo","desativado","aguardando ativação"].map(i=>(e=i===t?`value ="${i}" selected`:`value ="${i}"`,"status"===i&&(e+=" disabled"),`<option ${e}>${i}</option>`))}criaOptions(){return'\n    <option disabled selected>status</option>\n    <option value="ativo">ativo</option>\n    <option value="inativo">inativo</option>\n    <option value="aguardando ativação">aguardando ativação</option>\n    <option value="desativado">desativado</option>\n    '}}}},function(t,e,i){},function(t,e){t.exports={Cliente:class{constructor(t,e,i,n,a,o){this.id=t,this.nome=e,this.email=i,this.cpf=n,this.tel=a,this.status=o}}}},function(t,e,i){"use strict";i.r(e);i(3);var n=i(0),a=i(1),o=i(2);const l=document.querySelector(".container"),s=new o.ListaView(l),r=new n.Lista,c=new a.ClientesController(r,s);c.iniciaPagina(),l.addEventListener("click",(function(t){t.preventDefault();const e=t.target;c.clicks(e)}))}]);